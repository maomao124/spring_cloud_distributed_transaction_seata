# account-service 配置文件

spring:

  application:
    name: account-service


  # 配置数据源
  datasource:
    # 配置数据源-druid
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/seata_demo?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
      username: root
      password: 20010713



  cloud:
      nacos:
        discovery:
          # nacos 服务端地址
          server-addr: localhost:8848
          # 配置集群名称，也就是机房位置
          #cluster-name: HZ
          # namespace: 5544c4b1-2899-4915-94af-f9940c01c2b9
          # 是否为临时实例，true为临时实例
          ephemeral: false



ribbon:
  eager-load:
    # 开启饥饿加载
    enabled: true



# 设置日志级别，root表示根节点，即整体应用日志级别
logging:
 # 日志输出到文件的文件名
  file:
     name: account_server.log

  # 设置日志组
  group:
  # 自定义组名，设置当前组中所包含的包
    mao_pro: mao
  level:
    org.springframework.cloud.alibaba.seata.web: debug
    root: info
    # 为对应组设置日志级别
    mao_pro: debug
    # 日志输出格式
# pattern:
  # console: "%d %clr(%p) --- [%16t] %clr(%-40.40c){cyan} : %m %n"




mybatis-plus:
  global-config:
    db-config:
      id-type: auto


server:
  port: 8083



seata:
  # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
  registry:
    # 类型，file, nacos, eureka, redis, zk, consul, etcd3, sofa
    type: nacos
    # 配置nacos信息，和registry.conf中的配置一致
    nacos:
      # nacos地址
      server-addr: localhost:8848
      # seata tc 服务注册到 nacos的服务名称，可以自定义
      application: seata-server
      # 命名空间
      namespace: ""
      # 用户名
      username: mao
      # 密码
      password: 123456
      # 分组
      group: DEFAULT_GROUP
      # 事务组，根据这个获取tc服务的cluster名称，将来可以通过集群名称做负载均衡，相同机房的优先
  tx-service-group: seata-tx-service-group
  service:
    # 事务组与TC服务cluster的映射关系
    vgroupMapping:
      seata-tx-service-group: default

  config:
    type: nacos
    nacos:
     server-addr: 127.0.0.1:8848
     username: mao
     password: 123456
     group: SEATA_GROUP

  data-source-proxy-mode: XA




